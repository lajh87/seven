{
  "hash": "6fde556217157c1006c0b3756839c3fb",
  "result": {
    "markdown": "---\ntitle: Selecting Landsat Data\n---\n\n\nMy approach to selecting data is to take 400 km\\^2 grid of the UK and select the landsat data for each month over the last year that has the least cloud cover.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.9.1, GDAL 3.4.3, PROJ 7.2.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nuk <- ne_countries(country= \"united kingdom\") |>\n  sf::st_as_sf()\n\nuk_grid <- st_make_grid(uk, what = \"centers\", n = 40) |>\n  st_as_sf()\n\nuk_grid$id <- 1:nrow(uk_grid)\n\nggplot() +\n  geom_sf(data = uk_grid) + \n  geom_sf(data = uk, fill = NA) \n```\n\n::: {.cell-output-display}\n![](selecting-data_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nuk_grid_clipped <- uk_grid[uk,]\n\nggplot() +\n  geom_sf(data = uk_grid_clipped)\n```\n\n::: {.cell-output-display}\n![](selecting-data_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nst_area(uk)/1e6\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n248926.4 [m^2]\n```\n:::\n\n```{.r .cell-code}\n# 243,610 km (google)\n\narea <- st_make_grid(uk,  n = 40) |>\n  st_as_sf() |>\n  st_area() / 1e6 |>\n  head()\n\nmean(area) |> as.numeric()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 361.6751\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta <- readr::read_csv(\"data/landsat_ot_c2_l2_631c33e385785a47/landsat_ot_c2_l2_631c33e385785a47.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1883 Columns: 59\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (28): Landsat Product Identifier L2, Landsat Product Identifier L1, Lan...\ndbl  (26): Result Number, Collection Number, WRS Path, Target WRS Path, Roll...\ndttm  (2): Start Time, Stop Time\ndate  (3): Date Acquired, Date Product Generated L2, Date Product Generated L1\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nmeta |> dplyr::select(\n    PATH = `WRS Path`,\n    ROW = `WRS Row`,\n    `Date Acquired`,\n    `Land Cloud Cover`,\n    `Entity ID`\n  ) |>\n  dplyr::mutate(Month = paste0(substr(`Date Acquired`, 1, 8), \"01\")) |>\n  dplyr::mutate(ROW = as.numeric(ROW)) |> \n  dplyr::filter(PATH %in% c(201, 202), ROW == 24) |>\n  dplyr::filter(`Date Acquired` > \"2021-06-01\") |>\n  dplyr::group_by(Month) |>\n  dplyr::filter(`Land Cloud Cover` == min(`Land Cloud Cover`))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 6\n# Groups:   Month [7]\n   PATH   ROW `Date Acquired` `Land Cloud Cover` `Entity ID`           Month    \n  <dbl> <dbl> <date>                       <dbl> <chr>                 <chr>    \n1   202    24 2022-01-14                    8.2  LC92020242022014LGN00 2022-01-…\n2   202    24 2022-03-19                    0.04 LC92020242022078LGN00 2022-03-…\n3   201    24 2022-04-21                    9.63 LC82010242022111LGN00 2022-04-…\n4   202    24 2022-05-14                   11.2  LC82020242022134LGN00 2022-05-…\n5   202    24 2022-06-15                    4.24 LC82020242022166LGN00 2022-06-…\n6   201    24 2022-07-18                    0.81 LC92010242022199LGN00 2022-07-…\n7   201    24 2022-08-11                    0.02 LC82010242022223LGN00 2022-08-…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrs2_d <- st_read(\"data/WRS2_descending_0/WRS2_descending.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `WRS2_descending' from data source \n  `C:\\Users\\lukeh\\Documents\\quarto\\seven\\data\\WRS2_descending_0\\WRS2_descending.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 28892 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -82.6401 xmax: 180 ymax: 82.6401\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nwrs2_d <- st_transform(wrs2_d, st_crs(uk_grid_clipped))\nwrs2_d_clipped <- wrs2_d[uk,]\n\nmeta <- readr::read_csv(\"data/landsat_ot_c2_l2_631c33e385785a47/landsat_ot_c2_l2_631c33e385785a47.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1883 Columns: 59\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (28): Landsat Product Identifier L2, Landsat Product Identifier L1, Lan...\ndbl  (26): Result Number, Collection Number, WRS Path, Target WRS Path, Roll...\ndttm  (2): Start Time, Stop Time\ndate  (3): Date Acquired, Date Product Generated L2, Date Product Generated L1\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nmeta <- meta |>\n  dplyr::select(\n    PATH = `WRS Path`,\n    ROW = `WRS Row`,\n    `Date Acquired`,\n    `Land Cloud Cover`,\n    `Entity ID`\n  ) |>\n  dplyr::mutate(Month = paste0(substr(`Date Acquired`, 1, 8), \"01\")) |>\n  dplyr::group_by(\n    PATH, ROW, Month\n  ) |>\n  dplyr::filter(`Land Cloud Cover` == min(`Land Cloud Cover`)) |>\n  dplyr::mutate(ROW = as.numeric(ROW)) |>\n  dplyr::filter(`Date Acquired` >= \"2021-07-01\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- st_intersects(uk_grid_clipped, wrs2_d_clipped) |> \n  as.data.frame() \n  \npath_row <- wrs2_d_clipped[d$col.id,] |>\n  as.data.frame() |>\n  dplyr::select(PATH, ROW)\n\ndplyr::bind_cols(d, path_row) |>\n  dplyr::left_join(meta) |>\n  dplyr::group_by(row.id, Month) |>\n  dplyr::filter(`Land Cloud Cover` == min(`Land Cloud Cover`)) |>\n  dplyr::ungroup() |>\n  dplyr::select(PATH, ROW, `Date Acquired`, `Land Cloud Cover`, `Entity ID`, Month) |>\n  dplyr::distinct() |>\n  dplyr::filter(PATH %in% c(201, 202), ROW == 24) |>\n  dplyr::arrange(`Date Acquired`) |>\n  dplyr::group_by(Month) |>\n  dplyr::filter(`Land Cloud Cover` == min(`Land Cloud Cover`))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining, by = c(\"PATH\", \"ROW\")\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 6\n# Groups:   Month [7]\n   PATH   ROW `Date Acquired` `Land Cloud Cover` `Entity ID`           Month    \n  <dbl> <dbl> <date>                       <dbl> <chr>                 <chr>    \n1   202    24 2022-01-14                    8.2  LC92020242022014LGN00 2022-01-…\n2   202    24 2022-03-19                    0.04 LC92020242022078LGN00 2022-03-…\n3   201    24 2022-04-21                    9.63 LC82010242022111LGN00 2022-04-…\n4   202    24 2022-05-14                   11.2  LC82020242022134LGN00 2022-05-…\n5   202    24 2022-06-15                    4.24 LC82020242022166LGN00 2022-06-…\n6   201    24 2022-07-18                    0.81 LC92010242022199LGN00 2022-07-…\n7   201    24 2022-08-11                    0.02 LC82010242022223LGN00 2022-08-…\n```\n:::\n:::\n",
    "supporting": [
      "selecting-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}