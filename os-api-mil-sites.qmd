---
title: "Get Mil Sites from OS API"
editor: visual
---


```{r}
library(sf)
library(leaflet)

api_key <- Sys.getenv("OS_PROJECT_API_KEY")
base <- "https://api.os.uk"
path <- "/features/v1/wfs"

```


# RAF Station

## Bounding Box


```{r}

lng1 <- -1.664772
lat1 <- 51.722137
lng2 <- -1.530704
lat2 <- 51.777665

bbox <- st_bbox(c(xmin = lng1, xmax = lng2, ymin = lat1, ymax = lat2), crs = 4326)
bbox <- bbox |> st_as_sfc()

leaflet(bbox) |>
  addTiles() |>
  addPolygons()

bbox_bng <- st_transform(bbox, 27700)  |>
  st_bbox() |>
  as.numeric() |>
  paste(collapse = ",")

```

## Topographic Area

```{r, eval = FALSE}
layer <- "Topography_TopographicArea"

# Query the hits
query <- list(
  service="wfs",
  request="GetFeature",
  version = "2.0.0",
  key=api_key,
  typeNames = layer,
  srsName = "EPSG:27700",
  resultType = "hits",
  startIndex = 1,
  bbox = bbox_bng #!xml filter 
  )

hits <- httr::GET(base, path = path, query = query) |>
  httr::content()

hits_r <- hits |>  
  xml2::xml_attrs() |> 
  dplyr::nth(2) |> 
  as.numeric()

N <- ceiling(hits_r/100)

# Query the results
query$resultType <- "results"
query$outputFormat = "GeoJSON"
query$count <- 100 # needed for paging!

results <- purrr::map(1:N, ~{
  query$startIndex = (.x-1)*100
  httr::GET(base, path = path, query = query) |>
    sf::st_read(quiet = TRUE) |> 
    suppressMessages() |> 
    suppressWarnings()
})

results2 <- purrr::map(results, ~{
  .x$BHATopoAreaVersion <- as.numeric(.x$BHATopoAreaVersion)
  .x$AbsHMin <- as.numeric(.x$AbsHMin) 
  .x$AbsH2 <- as.numeric(.x$AbsH2) 
  .x$AbsHMax <- as.numeric(.x$AbsHMax) 
  .x$RelH2 <- as.numeric(.x$RelH2)
  .x$RelHMax <- as.numeric(.x$RelHMax) 
  .x$BHAConf <- as.numeric(.x$BHAConf)
  .x
})

results2 <- results2 |> 
  dplyr::bind_rows()

results2 |>
  dplyr::as_tibble() |>
  dplyr::group_by(Theme, DescriptiveGroup, DescriptiveTerm) |>
  dplyr::count(sort = TRUE)

st_crs(results2) <- 27700


```


## Functional Site

```{r}
layer <- "Sites_FunctionalSite"

# Query the hits
query <- list(
  service="wfs",
  request="GetFeature",
  version = "2.0.0",
  key=api_key,
  typeNames = layer,
  srsName = "EPSG:27700",
  resultType = "hits",
  bbox = "423224.8,202654.7,432514.1,208881.5" #!xml filter 
  )

hits <- httr::GET(base, path = path, query = query) |>
  httr::content()

(hits_r <- hits |>  xml2::xml_attrs() |> dplyr::nth(2) |> as.numeric())
N <- ceiling(hits_r/100)

# Query the results
query$resultType <- "results"
query$outputFormat <- "GeoJSON"
query$count <- 100

results <- purrr::map_df(1:N, ~{
  query$startIndex <- (.x-1)*100
  httr::GET(base, path = path, query = query) |>
  sf::st_read(quiet = TRUE) |>
    suppressMessages() |>
    suppressWarnings()
})

st_crs(results) <- 27700

leaflet(results |> st_transform(4326)) |>
  addTiles() |>
  addPolygons(label = ~DistinctiveName1)


```

